name: Build
on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types: 
      - completed
env:
  CARGO_TERM_COLOR: always
jobs:
  build_linux:
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v4
   - name: Get version
     run: |
       export version=$(python3 tools/prep_diz.py "file_id.diz")
       echo "VERSION=$version" >> $GITHUB_ENV
       echo "Version: $version"
   - name: Build
     id: build
     run: |
       rustup  update
       cargo build --release
       echo "Copy $DEB to icboard.deb"
       mkdir bin
       mv target/release/icboard bin
       mv target/release/icbsetup bin
       mv target/release/icbmailer bin
       mv target/release/icbsysmgr bin
       mv target/release/mkicbmnu bin
       mv target/release/mkicbtxt bin
       mv target/release/pplc bin
       mv target/release/ppld bin
       mv target/release/ppl-language-server bin
   - name: 'Upload zip'
     uses: actions/upload-artifact@v4
     with:
       name: icy_board_linux_${{ env.VERSION }}
       path: |
         bin/icboard
         bin/icbsetup
         bin/icbmailer
         bin/icbsysmgr
         bin/mkicbmnu
         bin/mkicbtxt
         bin/pplc
         bin/ppld
         bin/ppl-language-server
         file_id.diz
         INSTALL.txt
  build_windows:
   runs-on: windows-latest
   steps:
   - uses: actions/checkout@v4
   - name: Get version
     run: |
       $VERSION=$(python tools\prep_diz.py "file_id.diz")
       Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$VERSION" 
       echo "Version $VERSION"
   - name: Build
     id: build
     run: |
       rustup update
       set RUSTFLAGS=-C target-feature=+crt-static
       cargo build --release
       echo "Copy $DEB to icy_board.deb"
       mkdir bin
       move target/release/icboard.exe bin
       move target/release/icbsetup.exe bin
       move target/release/icbmailer.exe bin
       move target/release/icbsysmgr.exe bin
       move target/release/mkicbmnu.exe bin
       move target/release/mkicbtxt.exe bin
       move target/release/pplc.exe bin
       move target/release/ppld.exe bin
       move target/release/ppl-language-server.exe bin
   - name: 'Upload zip'
     uses: actions/upload-artifact@v4
     with:
       name: icy_board_windows_${{ env.VERSION }}
       path: |
         bin/icboard.exe
         bin/icbsetup.exe
         bin/icbmailer.exe
         bin/icbsysmgr.exe
         bin/mkicbmnu.exe
         bin/mkicbtxt.exe
         bin/pplc.exe
         bin/ppld.exe
         bin/ppl-language-server.exe
         file_id.diz
         INSTALL.txt
  build_mac:
   runs-on: macos-13
   steps:
   - uses: actions/checkout@v4
   - name: Get version
     run: |
       export version=$(python3 tools/prep_diz.py "file_id.diz")
       echo "VERSION=$version" >> $GITHUB_ENV
       echo "Version: $version"
   - name: Install rust compilation targets
     run: |
       rustup update
       rustup target add aarch64-apple-darwin
       rustup target add x86_64-apple-darwin
   - name: Build
     id: build
     run: |
       cargo build --release --target aarch64-apple-darwin
       cargo build --release --target x86_64-apple-darwin

       echo "Copy $DEB to icy_board.deb"
       mkdir -p aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/icboard aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/icbsetup aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/icbmailer aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/icbsysmgr aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/mkicbmnu aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/mkicbtxt aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/pplc aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/ppld aarch64-apple-darwin/bin
       mv target/aarch64-apple-darwin/release/ppl-language-server aarch64-apple-darwin/bin

       mkdir -p x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/icboard x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/icbsetup x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/icbmailer x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/icbsysmgr x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/mkicbmnu x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/mkicbtxt x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/pplc x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/ppld x86_64-apple-darwin/bin
       mv target/x86_64-apple-darwin/release/ppl-language-server x86_64-apple-darwin/bin

   - name: 'Upload zip'
     uses: actions/upload-artifact@v4
     with:
       name: icy_board_osx_aarch64-apple-darwin_${{ env.VERSION }}
       path: |
         aarch64-apple-darwin/bin/icboard
         aarch64-apple-darwin/bin/icbsetup
         aarch64-apple-darwin/bin/icbmailer
         aarch64-apple-darwin/bin/icbsysmgr
         aarch64-apple-darwin/bin/mkicbmnu
         aarch64-apple-darwin/bin/mkicbtxt
         aarch64-apple-darwin/bin/pplc
         aarch64-apple-darwin/bin/ppld
         aarch64-apple-darwin/bin/ppl-language-server
         file_id.diz
         INSTALL.txt
   - name: 'Upload zip'
     uses: actions/upload-artifact@v4
     with:
       name: icy_board_osx_x86_64-apple-darwin_${{ env.VERSION }}
       path: |
         x86_64-apple-darwin/bin/icboard
         x86_64-apple-darwin/bin/icbsetup
         x86_64-apple-darwin/bin/icbmailer
         x86_64-apple-darwin/bin/icbsysmgr
         x86_64-apple-darwin/bin/mkicbmnu
         x86_64-apple-darwin/bin/mkicbtxt
         x86_64-apple-darwin/bin/pplc
         x86_64-apple-darwin/bin/ppld
         x86_64-apple-darwin/bin/ppl-language-server
         file_id.diz
         INSTALL.txt
  build_vs_extension:
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v4
   - uses: pnpm/action-setup@v2
     name: Install pnpm
     with:
       version: 10
       run_install: false
   - name: Get version
     run: |
       export version=$(python3 ./tools/get_version.py)
       echo "Version: $VERSION"
       echo "VERSION=$version" >> $GITHUB_ENV
   - name: Install required libraries
     run: |
       cd crates/ppl-lsp
       pnpm i
   - name: Build
     id: build
     run: |
       cd crates/ppl-lsp
       tsc -b
       npm run compile
       pnpm run package
   - name: 'Upload zip'
     uses: actions/upload-artifact@v4
     with:
       name: ppl-language-server-${{ env.VERSION }}.vsix
       path: crates/ppl-lsp/ppl-language-server-${{ env.VERSION }}.vsix

  build_docs_pdf:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      run: |
        export version=$(python3 tools/prep_diz.py "file_id.diz")
        echo "VERSION=$version" >> $GITHUB_ENV
        echo "Version: $version"
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          latexmk \
          texlive-latex-recommended \
          texlive-latex-extra \
          texlive-fonts-recommended \
          texlive-fonts-extra \
          texlive-xetex \
          xindy
        pip install --upgrade pip
        pip install sphinx sphinx_rtd_theme
        # Install any other Sphinx extensions if needed
        # pip install sphinx-autodoc-typehints sphinxcontrib-bibtex etc.
    
    - name: Build PDF documentation
      run: |
        cd docs
        # Build the latex files first
        make latex
        # Build the PDF from latex
        cd build/latex
        make
        # Copy PDF to a better location
        cp *.pdf ../../../icy_board_documentation_${{ env.VERSION }}.pdf
    
    - name: Upload PDF documentation
      uses: actions/upload-artifact@v4
      with:
        name: icy_board_documentation_${{ env.VERSION }}
        path: icy_board_documentation_${{ env.VERSION }}.pdf