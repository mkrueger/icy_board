DECLARE PROCEDURE DrawMsgText()
DECLARE PROCEDURE ClrHdrArea()

DECLARE PROCEDURE DrawHeaderArea()
DECLARE PROCEDURE ShowHelp()
DECLARE PROCEDURE ReadMsg()
DECLARE PROCEDURE ReadMsgConfig()

DECLARE PROCEDURE BuildMessageIndex()
DECLARE FUNCTION GetActualMessageNumber(INTEGER DisplayIndex) INTEGER
DECLARE FUNCTION WriteMsgFile() STRING
DECLARE FUNCTION PageUp() BOOLEAN
DECLARE FUNCTION PageDown() BOOLEAN

INTEGER CONF = CurConf()
INTEGER LOW = LOMSGNUM()
INTEGER HIGH = HiMsgNum()
STRING FROM(10), SUBJ(10), TO(10), DATETXT(10), ValidMessageIndex(10)
INTEGER ValidMessageCount = 0
BOOLEAN MessageIndexBuilt

INTEGER FirstMsg = 0
INTEGER Cursor = 0
INTEGER FirstTxtLine = 0
STRING MSG_HDR_ATTRIBUTE
STRING SELECTED_MSG_HDR_ATTRIBUTE
INTEGER I, J

STRING LINE
INTEGER LastFirstMsg = -1
INTEGER OldCursor = -1
BOOLEAN Redraw


FOpen 1, PPEPath() + "lread.cfg", O_RD, S_DB

FGet 1, LINE
TOKENIZE LINE

INTEGER AreaX = ToInt(GETTOKEN())
INTEGER AreaY = ToInt(GETTOKEN())
INTEGER Lines = ToInt(GETTOKEN())

FGet 1, LINE
TOKENIZE LINE

INTEGER MsgHdrX1 = ToInt(GETTOKEN())
INTEGER MsgHdrY1 = ToInt(GETTOKEN())

INTEGER MsgHdrX2 = ToInt(GETTOKEN())
INTEGER MsgHdrY2 = ToInt(GETTOKEN())

FGet 1, MSG_HDR_ATTRIBUTE
FGet 1, SELECTED_MSG_HDR_ATTRIBUTE

FClose 1

INTEGER MAX_MSGS = HIGH - LOW + 1
ReDim FROM, MAX_MSGS
ReDim SUBJ, MAX_MSGS
ReDim TO, MAX_MSGS
ReDim DATETXT, MAX_MSGS
ReDim ValidMessageIndex, MAX_MSGS

:Redisplay
Cls
StartDisp FNS
DispFile PPEPath() + "data\screen.pcb", GRAPH
DrawHeaderArea()
DrawMsgText()

LOOP
    STRING CH = InKey()
    SELECT CASE CH
    CASE Chr(27)
        BREAK
    CASE Chr(13)
        ReadMsg()
        LastFirstMsg = -1
        goto Redisplay
    CASE "H", "h"
        ShowHelp()
        LastFirstMsg = -1
        goto Redisplay
    CASE "HOME"
        Cursor = 0
        FirstMsg = 0
        FirstTxtLine = 0
        DrawHeaderArea()
        DrawMsgText()
    CASE "END"
        IF ValidMessageCount > 0 THEN
            Cursor = ValidMessageCount - 1
            FirstMsg = Cursor - Lines
            IF FirstMsg < 0 THEN FirstMsg = 0 ENDIF
        ELSE
            Cursor = 0
            FirstMsg = 0
        ENDIF

        FirstTxtLine = 0
        DrawHeaderArea()
        DrawMsgText()
    CASE "UP"
        IF Cursor > 0 THEN
            Up()
            DrawHeaderArea()
            DrawMsgText()
        ENDIF
    CASE "DOWN"
        IF Cursor < ValidMessageCount - 1 THEN
            Down()
            DrawHeaderArea()
            DrawMsgText()
        ENDIF
    CASE "LEFT"
        IF PageUp() THEN
            DrawHeaderArea()
            DrawMsgText()
        ENDIF
    CASE "RIGHT"
        IF PageDown() THEN
            DrawHeaderArea()
            DrawMsgText()
        ENDIF        
    CASE "PGUP"
        FirstTxtLine -= MsgHdrY2 - MsgHdrY1;
        IF FirstTxtLine < 0 FirstTxtLine = 0
        DrawMsgText()
    CASE "PGDN"
        FirstTxtLine += MsgHdrY2 - MsgHdrY1;
        DrawMsgText()
    ENDSELECT
ENDLOOP

PROCEDURE BuildMessageIndex()
    ValidMessageCount = 0
    MessageIndexBuilt = FALSE
    
    INTEGER MSG_NUM
    FOR MSG_NUM = LOW TO HIGH
        BOOLEAN IsValid = FALSE
        
;$IF RUNTIME >= 400
        STRING TestTo = GetMsgHdr(CONF, MSG_NUM, HDR_TO)
        IF (TestTo = "ALL" | TestTo = U_NAME()) THEN
            IsValid = TRUE
        ENDIF
;$ELSE
        STRING MSGS_FILE = ConfInfo(CONF, 12)
        IF Exist(MSGS_FILE + ".IDX") THEN
            FOPEN 4, MSGS_FILE + ".IDX", O_RD, S_DW
            IF !FErr(4) THEN
                INTEGER IndexPos = (MSG_NUM - LOW) * 64
                FSEEK 4, IndexPos, SEEK_SET
                INTEGER TestOffset
                FREAD 4, TestOffset, 4
                IF TestOffset > 0 THEN
                    IsValid = TRUE
                ENDIF
                FCLOSE 4
            ENDIF
        ENDIF
;$ENDIF
        
        IF IsValid THEN
            ValidMessageIndex(ValidMessageCount) = MSG_NUM
            ValidMessageCount = ValidMessageCount + 1
        ENDIF
    NEXT
    
    MessageIndexBuilt = TRUE
ENDPROC

FUNCTION GetActualMessageNumber(INTEGER DisplayIndex) INTEGER
    IF !MessageIndexBuilt THEN
        BuildMessageIndex()
    ENDIF
    
    IF DisplayIndex >= 0 && DisplayIndex < ValidMessageCount THEN
        RETURN ValidMessageIndex(DisplayIndex)
    ENDIF
    
    RETURN -1
ENDFUNC


FUNCTION Up() BOOLEAN
    IF Cursor > 0 THEN
        Cursor -= 1
        IF Cursor < FirstMsg THEN
            FirstMsg = Cursor
            IF FirstMsg < 0 THEN FirstMsg = 0 ENDIF
        ENDIF
        FirstTxtLine = 0
        RETURN TRUE
    ENDIF
    RETURN FALSE
ENDFUNC

FUNCTION Down() BOOLEAN
    IF Cursor < ValidMessageCount - 1 THEN
        Cursor += 1
        IF Cursor > FirstMsg + Lines THEN
            FirstMsg = Cursor - Lines
            IF FirstMsg < 0 THEN FirstMsg = 0 ENDIF
        ENDIF
        FirstTxtLine = 0
        RETURN TRUE
    ENDIF
    RETURN FALSE
ENDFUNC


FUNCTION PageUp() BOOLEAN
    IF ValidMessageCount <= 0 RETURN FALSE
    INTEGER PageSize = Lines + 1
    INTEGER NewCursor = Cursor - PageSize
    IF NewCursor < 0 THEN NewCursor = 0 ENDIF
    IF NewCursor == Cursor RETURN FALSE
    Cursor = NewCursor
    FirstMsg = Cursor
    IF FirstMsg < 0 THEN FirstMsg = 0 ENDIF
    FirstTxtLine = 0
    RETURN TRUE
ENDFUNC

FUNCTION PageDown() BOOLEAN
    IF ValidMessageCount <= 0 RETURN FALSE
    INTEGER PageSize = Lines + 1
    INTEGER NewCursor = Cursor + PageSize
    IF NewCursor > ValidMessageCount - 1 THEN
        NewCursor = ValidMessageCount - 1
    ENDIF
    IF NewCursor == Cursor RETURN FALSE
    Cursor = NewCursor
    FirstMsg = Cursor - Lines
    IF FirstMsg < 0 THEN FirstMsg = 0 ENDIF
    FirstTxtLine = 0
    RETURN TRUE
ENDFUNC