DECLARE PROCEDURE DrawMsgArea()
DECLARE PROCEDURE ClrMsgArea()
DECLARE PROCEDURE DrawMsgText()

INTEGER AreaX, AreaY, Lines
INTEGER MsgStartY

INTEGER CONF = CurConf()
INTEGER LOW = LOMSGNUM()
INTEGER HIGH = HiMsgNum()
STRING FROM(10), SUBJ(10), TO(10), DATETXT(10)
INTEGER FirstMsg = 0
INTEGER Cursor = 0

FOpen 1, PPEPath()+ "lread.cfg", O_RD, S_DB

FGet 1, AreaX
FGet 1, AreaY
FGet 1, Lines
FGet 1, MsgStartY
Lines -= 1
FClose 1

INTEGER MAX_MSGS = HIGH - LOW + 1
ReDim FROM, MAX_MSGS
ReDim SUBJ, MAX_MSGS
ReDim TO, MAX_MSGS
ReDim DATETXT, MAX_MSGS

Cls
DispFile PPEPath() + "screen.pcb", GRAPH
DrawMsgArea()
DrawMsgText()
  
LOOP
  STRING CH = InKey()
  SELECT CASE CH 
    CASE Chr(27)
      BREAK
    CASE "UP"
      IF Cursor > 0 THEN
        Cursor -= 1
        IF Cursor < FirstMsg THEN
          FirstMsg = Cursor
        ENDIF
        DrawMsgArea()
        DrawMsgText()
      ENDIF
    CASE "DOWN"
      IF Cursor < HIGH - LOW THEN
      Cursor += 1
      IF Cursor > FirstMsg + Lines THEN
        FirstMsg = Cursor - Lines 
      ENDIF
      DrawMsgArea()
      DrawMsgText()
    ENDIF
  ENDSELECT
ENDLOOP

END

PROCEDURE DrawMsgArea()
  INTEGER I
  FOR I = 0 TO Lines
    AnsiPos AreaX, AreaY + I
    INTEGER O = FirstMsg + I
    IF O > HIGH - LOW  THEN
      ClrEOL
      CONTINUE
    ENDIF

    IF O == Cursor THEN
      Color 11
      Print ">"
    ELSE
      Color 7
      Print " "
    ENDIF
    INTEGER MSG_NUM = LOW + O

    IF FROM[O] == "" THEN 
      FROM[O] = Left(StripATX(GetMsgHdr(CONF, MSG_NUM, HDR_FROM)), 12) + " "
      SUBJ[O] = Left(StripATX(GetMsgHdr(CONF, MSG_NUM, HDR_SUBJ)), 36) + " "
      TO[O] = Left(StripATX(GetMsgHdr(CONF, MSG_NUM, HDR_TO)), 12) + " "
      DATETXT[O] = STRING(GetMsgHdr(CONF, MSG_NUM, HDR_DATE))
    ENDIF
    Print Right(STRING(MSG_NUM), 4), " ", SUBJ[o], FROM[o], TO[o], DATETXT[O]
  NEXT  
ENDPROC

PROCEDURE DrawMsgText()
  STRING line
  STRING MsgFile = PPEPath() + "msgtxt." + STRING(PCBNode())
  MsgToFile CONF, LOW + Cursor, MsgFile 
  IF !Exist(MsgFile) THEN
    LOG "Message file " + MsgFile + "  doesn't exists", true
    ClrMsgArea()
    RETURN 
  ENDIF
  FOpen 1, MsgFile, O_RD, S_DB
  IF FErr(1) THEN
    LOG "Error reading message text", true
    ClrMsgArea()
    RETURN
  ENDIF
  LOOP  
    FGet 1, line
    IF FErr(1) RETURN
    IF line == "Message Body:" BREAK
  ENDLOOP

  INTEGER msg_line = 0
  Color 7
  LOOP  
    FGet 1, line
    IF FErr(1) || msg_line + MsgStartY > 23 BREAK
    AnsiPos 1, MsgStartY + msg_line
    IF LEN(line) > 79 THEN 
      line = Left(line, 79)
    ELSE 
      ClrEOL
    ENDIF
    PRINT line
    msg_line += 1
  ENDLOOP
  FClose 1
  Delete MsgFile
  WHILE msg_line <= 23 - MsgStartY DO
    AnsiPos 1, MsgStartY + msg_line
    ClrEOL
    msg_line += 1
  ENDWHILE
ENDPROC

PROCEDURE ClrMsgArea()
  INTEGER I
  FOR I = 0 TO Lines
    AnsiPos 1, MsgStartY + I
    ClrEOL
  NEXT
ENDPROC