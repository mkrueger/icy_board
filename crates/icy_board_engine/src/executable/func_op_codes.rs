use crate::executable::ArgumentDefinitionFlags;

use super::{ArgumentDefinition, Signature, VariableType};

#[repr(i16)]
#[allow(dead_code)]
#[allow(non_camel_case_types)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub enum FuncOpCode {
    END = 0,
    CPAR = -1,
    UPLUS = -2,
    UMINUS = -3,
    EXP = -4,
    TIMES = -5,
    DIVIDE = -6,
    MOD = -7,
    PLUS = -8,
    MINUS = -9,
    EQ = -10,
    NE = -11,
    LT = -12,
    LE = -13,
    GT = -14,
    GE = -15,
    NOT = -16,
    AND = -17,
    OR = -18,
    OPAR = -19,
    LEN = -20,
    LOWER = -21,
    UPPER = -22,
    MID = -23,
    LEFT = -24,
    RIGHT = -25,
    SPACE = -26,
    FERR = -27,
    CHR = -28,
    ASC = -29,
    INSTR = -30,
    ABORT = -31,
    LTRIM = -32,
    RTRIM = -33,
    TRIM = -34,
    RANDOM = -35,
    DATE = -36,
    TIME = -37,
    U_NAME = -38,
    U_LDATE = -39,
    U_LTIME = -40,
    U_LDIR = -41,
    U_LOGONS = -42,
    U_FUL = -43,
    U_FDL = -44,
    U_BDLDAY = -45,
    U_TIMEON = -46,
    U_BDL = -47,
    U_BUL = -48,
    YEAR = -49,
    MONTH = -50,
    DAY = -51,
    DOW = -52,
    HOUR = -53,
    MIN = -54,
    SEC = -55,
    TIMEAP = -56,
    VER = -57,
    NOCHAR = -58,
    YESCHAR = -59,
    STRIPATX = -60,
    REPLACE = -61,
    STRIP = -62,
    INKEY = -63,
    TOSTRING = -64,
    MASK_PWD = -65,
    MASK_ALPHA = -66,
    MASK_NUM = -67,
    MASK_ALNUM = -68,
    MASK_FILE = -69,
    MASK_PATH = -70,
    MASK_ASCII = -71,
    CURCONF = -72,
    PCBDAT = -73,
    PPEPATH = -74,
    VALDATE = -75,
    VALTIME = -76,
    U_MSGRD = -77,
    U_MSGWR = -78,
    PCBNODE = -79,
    READLINE = -80,
    SYSOPSEC = -81,
    ONLOCAL = -82,
    UN_STAT = -83,
    UN_NAME = -84,
    UN_CITY = -85,
    UN_OPER = -86,
    CURSEC = -87,
    GETTOKEN = -88,
    MINLEFT = -89,
    MINON = -90,
    GETENV = -91,
    CALLID = -92,
    REGAL = -93,
    REGAH = -94,
    REGBL = -95,
    REGBH = -96,
    REGCL = -97,
    REGCH = -98,
    REGDL = -99,
    REGDH = -100,
    REGAX = -101,
    REGBX = -102,
    REGCX = -103,
    REGDX = -104,
    REGSI = -105,
    REGDI = -106,
    REGF = -107,
    REGCF = -108,
    REGDS = -109,
    REGES = -110,
    B2W = -111,
    PEEKB = -112,
    PEEKW = -113,
    MKADDR = -114,
    EXIST = -115,
    I2S = -116,
    S2I = -117,
    CARRIER = -118,
    TOKENSTR = -119,
    CDON = -120,
    LANGEXT = -121,
    ANSION = -122,
    VALCC = -123,
    FMTCC = -124,
    CCTYPE = -125,
    GETX = -126,
    GETY = -127,
    BAND = -128,
    BOR = -129,
    BXOR = -130,
    BNOT = -131,
    U_PWDHIST = -132,
    U_PWDLC = -133,
    U_PWDTC = -134,
    U_STAT = -135,
    DEFCOLOR = -136,
    ABS = -137,
    GRAFMODE = -138,
    PSA = -139,
    FILEINF = -140,
    PPENAME = -141,
    MKDATE = -142,
    CURCOLOR = -143,
    KINKEY = -144,
    MINKEY = -145,
    MAXNODE = -146,
    SLPATH = -147,
    HELPPATH = -148,
    TEMPPATH = -149,
    MODEM = -150,
    LOGGEDON = -151,
    CALLNUM = -152,
    MGETBYTE = -153,
    TOKCOUNT = -154,
    U_RECNUM = -155,
    U_INCONF = -156,
    PEEKDW = -157,
    DBGLEVEL = -158,
    SCRTEXT = -159,
    SHOWSTAT = -160,
    PAGESTAT = -161,

    REPLACESTR = -162,
    STRIPSTR = -163,
    TOBIGSTR = -164,
    TOBOOLEAN = -165,
    TOBYTE = -166,
    TODATE = -167,
    TODREAL = -168,
    TOEDATE = -169,
    TOINTEGER = -170,
    TOMONEY = -171,
    TOREAL = -172,
    TOSBYTE = -173,
    TOSWORD = -174,
    TOTIME = -175,
    TOUNSIGNED = -176,
    TOWORD = -177,
    MIXED = -178,
    ALIAS = -179,
    CONFREG = -180,
    CONFEXP = -181,
    CONFSEL = -182,
    CONFSYS = -183,
    CONFMW = -184,
    LPRINTED = -185,
    ISNONSTOP = -186,
    ERRCORRECT = -187,
    CONFALIAS = -188,
    USERALIAS = -189,
    CURUSER = -190,
    U_LMR = -191,
    CHATSTAT = -192,
    DEFANS = -193,
    LASTANS = -194,
    MEGANUM = -195,
    EVTTIMEADJ = -196,
    ISBITSET = -197,
    FMTREAL = -198,
    FLAGCNT = -199,
    KBDBUFSIZE = -200,
    PPLBUFSIZE = -201,
    KBDFILUSED = -202,
    LOMSGNUM = -203,
    HIMSGNUM = -204,

    DRIVESPACE = -205,
    OUTBYTES = -206,
    HICONFNUM = -207,
    INBYTES = -208,
    CRC32 = -209,
    PCBMAC = -210,
    ACTMSGNUM = -211,
    STACKLEFT = -212,
    STACKERR = -213,

    DGETALIAS = -214,
    DBOF = -215,
    DCHANGED = -216,
    DDECIMALS = -217,
    DDELETED = -218,
    DEOF = -219,
    DERR = -220,
    DFIELDS = -221,
    DLENGTH = -222,
    DNAME = -223,
    DRECCOUNT = -224,
    DRECNO = -225,
    DTYPE = -226,
    FNEXT = -227,
    DNEXT = -228,
    TODDATE = -229,
    DCLOSEALL = -230,
    DOPEN = -231,
    DCLOSE = -232,
    DSETALIAS = -233,
    DPACK = -234,
    DLOCKF = -235,
    DLOCK = -236,
    DLOCKR = -237,
    DUNLOCK = -238,
    DNOPEN = -239,
    DNCLOSE = -240,
    DNCLOSEALL = -241,
    DNEW = -242,
    DADD = -243,
    DAPPEND = -244,
    DTOP = -245,
    DGO = -246,
    DBOTTOM = -247,
    DSKIP = -248,
    DBLANK = -249,
    DDELETE = -250,
    DRECALL = -251,
    DTAG = -252,
    DSEEK = -253,
    DFBLANK = -254,
    DGET = -255,
    DPUT = -256,
    DFCOPY = -257,
    DSELECT = -258,
    DCHKSTAT = -259,

    PCBACCOUNT = -260,
    PCBACCSTAT = -261,
    DERRMSG = -262,
    ACCOUNT = -263,
    SCANMSGHDR = -264,
    CHECKRIP = -265,
    RIPVER = -266,
    QWKLIMITS = -267,
    FINDFIRST = -268,
    FINDNEXT = -269,
    USELMRS = -270,
    CONFINFO = -271,
    TINKEY = -272,
    CWD = -273,
    INSTRR = -274,
    FDORDAKA = -275,
    FDORDORG = -276,
    FDORDAREA = -277,
    FDOQRD = -278,
    GETDRIVE = -279,
    SETDRIVE = -280,
    BS2I = -281,
    BD2I = -282,
    I2BS = -283,
    I2BD = -284,
    FTELL = -285,
    OS = -286,
    SHORT_DESC = -287,
    GetBankBal = -288,
    GetMsgHdr = -289,
    SetMsgHdr = -290,
    MemberReference = -291,
    MemberCall = -292,
    NewConfInfo = -293,
    AreaId = -294,
}

pub const LAST_FUNC: i16 = -293;

impl FuncOpCode {
    pub fn get_definition(self) -> &'static FunctionDefinition {
        let i = -(self as i16);
        &FUNCTION_DEFINITIONS[i as usize]
    }
}

#[derive(Debug, PartialEq)]
pub struct FunctionDefinition {
    pub name: &'static str,
    pub version: u16,
    pub opcode: FuncOpCode,
    pub return_type: VariableType,
    pub arg_descr: i8,
    pub args: Option<Vec<ArgumentDefinition>>,
}

impl FunctionDefinition {
    pub fn get_function_definitions(str: &str) -> Vec<usize> {
        let mut ret = Vec::new();
        for (i, item) in FUNCTION_DEFINITIONS.iter().enumerate() {
            if item.name.eq_ignore_ascii_case(str) {
                ret.push(i);
            }
        }
        ret
    }

    pub fn get_signature(&self) -> Signature {
        let mut res = self.name.to_ascii_uppercase();
        let sig_args;

        res.push_str("(");
        if let Some(args) = &self.args {
            res.push_str(&args.iter().map(|arg| super::format_argument(arg)).collect::<Vec<String>>().join(", "));
            sig_args = args.iter().map(|arg| arg.name.to_string()).collect::<Vec<String>>();
        } else {
            sig_args = Vec::new();
        }
        res.push_str(") ");
        let ts = if self.return_type == VariableType::None {
            "multitype".to_string()
        } else {
            self.return_type.to_string()
        }
        .to_ascii_uppercase();
        res.push_str(&ts);
        Signature::new_with_args(res, sig_args)
    }
}
lazy_static::lazy_static! {
    pub static ref FUNCTION_DEFINITIONS: [FunctionDefinition; 298] = [
        FunctionDefinition {
            name: "END",
            version: 100,
            opcode: FuncOpCode::END,

            return_type: VariableType::Integer,
            args: None,
            arg_descr: -1,
        },
        FunctionDefinition {
            name: "CPAR",
            version: 100,
            opcode: FuncOpCode::CPAR,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: -1,
        },
        FunctionDefinition {
            name: "UPLUS",
            version: 100,
            opcode: FuncOpCode::UPLUS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x10,
        },
        FunctionDefinition {
            name: "UMINUS",
            version: 100,
            opcode: FuncOpCode::UMINUS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x10,
        },
        FunctionDefinition {
            name: "EXP",
            version: 100,
            opcode: FuncOpCode::EXP,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "TIMES",
            version: 100,
            opcode: FuncOpCode::TIMES,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "DIVIDE",
            version: 100,
            opcode: FuncOpCode::DIVIDE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "MOD",
            version: 100,
            opcode: FuncOpCode::MOD,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "PLUS",
            version: 100,
            opcode: FuncOpCode::PLUS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "MINUS",
            version: 100,
            opcode: FuncOpCode::MINUS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "EQ",
            version: 100,
            opcode: FuncOpCode::EQ,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "NE",
            version: 100,
            opcode: FuncOpCode::NE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "LT",
            version: 100,
            opcode: FuncOpCode::LT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "LE",
            version: 100,
            opcode: FuncOpCode::LE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "GT",
            version: 100,
            opcode: FuncOpCode::GT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "GE",
            version: 100,
            opcode: FuncOpCode::GE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "NOT",
            version: 100,
            opcode: FuncOpCode::NOT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x10,
        },
        FunctionDefinition {
            name: "AND",
            version: 100,
            opcode: FuncOpCode::AND,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "OR",
            version: 100,
            opcode: FuncOpCode::OR,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x11,
        },
        FunctionDefinition {
            name: "OPAR",
            version: 100,
            opcode: FuncOpCode::OPAR,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: -1,
        },
        FunctionDefinition {
            name: "Len",
            version: 100,
            opcode: FuncOpCode::LEN,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr)
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Lower",
            version: 100,
            opcode: FuncOpCode::LOWER,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr)
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Upper",
            version: 100,
            opcode: FuncOpCode::UPPER,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr)
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Mid",
            version: 100,
            opcode: FuncOpCode::MID,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("pos", VariableType::Integer),
                ArgumentDefinition::new("len", VariableType::Integer),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "Left",
            version: 100,
            opcode: FuncOpCode::LEFT,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("count", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Right",
            version: 100,
            opcode: FuncOpCode::RIGHT,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("count", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Space",
            version: 100,
            opcode: FuncOpCode::SPACE,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("count", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FErr",
            version: 100,
            opcode: FuncOpCode::FERR,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Chr",
            version: 100,
            opcode: FuncOpCode::CHR,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("ch", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Asc",
            version: 100,
            opcode: FuncOpCode::ASC,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "InStr",
            version: 100,
            opcode: FuncOpCode::INSTR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("search", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Abort",
            version: 100,
            opcode: FuncOpCode::ABORT,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "LTrim",
            version: 100,
            opcode: FuncOpCode::LTRIM,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("char", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "RTrim",
            version: 100,
            opcode: FuncOpCode::RTRIM,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("char", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Trim",
            version: 100,
            opcode: FuncOpCode::TRIM,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("char", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Random",
            version: 100,
            opcode: FuncOpCode::RANDOM,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Date",
            version: 100,
            opcode: FuncOpCode::DATE,
            return_type: VariableType::Date,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Time",
            version: 100,
            opcode: FuncOpCode::TIME,
            return_type: VariableType::Time,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_Name",
            version: 100,
            opcode: FuncOpCode::U_NAME,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_LDate",
            version: 100,
            opcode: FuncOpCode::U_LDATE,
            return_type: VariableType::Date,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_LTime",
            version: 100,
            opcode: FuncOpCode::U_LTIME,
            return_type: VariableType::Time,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_LDir",
            version: 100,
            opcode: FuncOpCode::U_LDIR,
            return_type: VariableType::Date,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_Logons",
            version: 100,
            opcode: FuncOpCode::U_LOGONS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_FUl",
            version: 100,
            opcode: FuncOpCode::U_FUL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_FDl",
            version: 100,
            opcode: FuncOpCode::U_FDL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_BDLDay",
            version: 100,
            opcode: FuncOpCode::U_BDLDAY,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_TimeOn",
            version: 100,
            opcode: FuncOpCode::U_TIMEON,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_BDl",
            version: 100,
            opcode: FuncOpCode::U_BDL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_BUl",
            version: 100,
            opcode: FuncOpCode::U_BUL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Year",
            version: 100,
            opcode: FuncOpCode::YEAR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Date),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Month",
            version: 100,
            opcode: FuncOpCode::MONTH,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Date),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Day",
            version: 100,
            opcode: FuncOpCode::DAY,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Date),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Dow",
            version: 100,
            opcode: FuncOpCode::DOW,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Date),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Hour",
            version: 100,
            opcode: FuncOpCode::HOUR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("dayhour", VariableType::Time),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Min",
            version: 100,
            opcode: FuncOpCode::MIN,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("dayhour", VariableType::Time),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Sec",
            version: 100,
            opcode: FuncOpCode::SEC,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("dayhour", VariableType::Time),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "TimeAP",
            version: 100,
            opcode: FuncOpCode::TIMEAP,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Time),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Ver",
            version: 100,
            opcode: FuncOpCode::VER,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "NoChar",
            version: 100,
            opcode: FuncOpCode::NOCHAR,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "YesChar",
            version: 100,
            opcode: FuncOpCode::YESCHAR,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "StripATX",
            version: 100,
            opcode: FuncOpCode::STRIPATX,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Replace",
            version: 100,
            opcode: FuncOpCode::REPLACE,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("search", VariableType::String),
                ArgumentDefinition::new("replace", VariableType::String),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "Strip",
            version: 100,
            opcode: FuncOpCode::STRIP,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("char", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "InKey",
            version: 100,
            opcode: FuncOpCode::INKEY,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "String",
            version: 100,
            opcode: FuncOpCode::TOSTRING,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Mask_Pwd",
            version: 100,
            opcode: FuncOpCode::MASK_PWD,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Mask_Alpha",
            version: 100,
            opcode: FuncOpCode::MASK_ALPHA,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Mask_Num",
            version: 100,
            opcode: FuncOpCode::MASK_NUM,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Mask_Alnum",
            version: 100,
            opcode: FuncOpCode::MASK_ALNUM,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Mask_File",
            version: 100,
            opcode: FuncOpCode::MASK_FILE,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Mask_Path",
            version: 100,
            opcode: FuncOpCode::MASK_PATH,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Mask_ASCII",
            version: 100,
            opcode: FuncOpCode::MASK_ASCII,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "CurConf",
            version: 100,
            opcode: FuncOpCode::CURCONF,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "PCBDat",
            version: 100,
            opcode: FuncOpCode::PCBDAT,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "PPEPath",
            version: 100,
            opcode: FuncOpCode::PPEPATH,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ValDate",
            version: 100,
            opcode: FuncOpCode::VALDATE,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("date", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ValTime",
            version: 100,
            opcode: FuncOpCode::VALTIME,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("time", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "U_MsgRd",
            version: 100,
            opcode: FuncOpCode::U_MSGRD,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_MsgWr",
            version: 100,
            opcode: FuncOpCode::U_MSGWR,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "PCBNode",
            version: 100,
            opcode: FuncOpCode::PCBNODE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ReadLine",
            version: 100,
            opcode: FuncOpCode::READLINE,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("file", VariableType::String),
                ArgumentDefinition::new("line", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "SysopSec",
            version: 100,
            opcode: FuncOpCode::SYSOPSEC,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "OnLocal",
            version: 100,
            opcode: FuncOpCode::ONLOCAL,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "UN_Stat",
            version: 100,
            opcode: FuncOpCode::UN_STAT,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "UN_Name",
            version: 100,
            opcode: FuncOpCode::UN_NAME,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "UN_City",
            version: 100,
            opcode: FuncOpCode::UN_CITY,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "UN_Oper",
            version: 100,
            opcode: FuncOpCode::UN_OPER,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "CurSec",
            version: 100,
            opcode: FuncOpCode::CURSEC,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "GetToken",
            version: 100,
            opcode: FuncOpCode::GETTOKEN,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MinLeft",
            version: 100,
            opcode: FuncOpCode::MINLEFT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MinOn",
            version: 100,
            opcode: FuncOpCode::MINON,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "GetEnv",
            version: 100,
            opcode: FuncOpCode::GETENV,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "CallId",
            version: 100,
            opcode: FuncOpCode::CALLID,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegAL",
            version: 100,
            opcode: FuncOpCode::REGAL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegAH",
            version: 100,
            opcode: FuncOpCode::REGAH,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegBL",
            version: 100,
            opcode: FuncOpCode::REGBL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegBH",
            version: 100,
            opcode: FuncOpCode::REGBH,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegCL",
            version: 100,
            opcode: FuncOpCode::REGCL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegCH",
            version: 100,
            opcode: FuncOpCode::REGCH,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegDL",
            version: 100,
            opcode: FuncOpCode::REGDL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegDH",
            version: 100,
            opcode: FuncOpCode::REGDH,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegAX",
            version: 100,
            opcode: FuncOpCode::REGAX,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegBX",
            version: 100,
            opcode: FuncOpCode::REGBX,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegCX",
            version: 100,
            opcode: FuncOpCode::REGCX,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegDX",
            version: 100,
            opcode: FuncOpCode::REGDX,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegSI",
            version: 100,
            opcode: FuncOpCode::REGSI,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegDI",
            version: 100,
            opcode: FuncOpCode::REGDI,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegF",
            version: 100,
            opcode: FuncOpCode::REGF,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegCF",
            version: 100,
            opcode: FuncOpCode::REGCF,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegDS",
            version: 100,
            opcode: FuncOpCode::REGDS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RegES",
            version: 100,
            opcode: FuncOpCode::REGES,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "B2W",
            version: 100,
            opcode: FuncOpCode::B2W,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("hi", VariableType::Integer),
                ArgumentDefinition::new("lo", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "PeekB",
            version: 100,
            opcode: FuncOpCode::PEEKB,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "PeekW",
            version: 100,
            opcode: FuncOpCode::PEEKW,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "MkAddr",
            version: 100,
            opcode: FuncOpCode::MKADDR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("seg", VariableType::Integer),
                ArgumentDefinition::new("off", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Exist",
            version: 100,
            opcode: FuncOpCode::EXIST,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("file", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "I2S",
            version: 100,
            opcode: FuncOpCode::I2S,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("num", VariableType::Integer),
                ArgumentDefinition::new("base", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "S2I",
            version: 100,
            opcode: FuncOpCode::S2I,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("num", VariableType::Integer),
                ArgumentDefinition::new("base", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Carrier",
            version: 100,
            opcode: FuncOpCode::CARRIER,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "TokenStr",
            version: 100,
            opcode: FuncOpCode::TOKENSTR,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "CDOn",
            version: 100,
            opcode: FuncOpCode::CDON,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "LangExt",
            version: 100,
            opcode: FuncOpCode::LANGEXT,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ANSIOn",
            version: 100,
            opcode: FuncOpCode::ANSION,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ValCC",
            version: 100,
            opcode: FuncOpCode::VALCC,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("ccNum", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FmtCC",
            version: 100,
            opcode: FuncOpCode::FMTCC,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("format", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "CCType",
            version: 100,
            opcode: FuncOpCode::CCTYPE,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("ccNum", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "GetX",
            version: 100,
            opcode: FuncOpCode::GETX,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "GetY",
            version: 100,
            opcode: FuncOpCode::GETY,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "And",
            version: 100,
            opcode: FuncOpCode::BAND,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("left", VariableType::Integer),
                ArgumentDefinition::new("right", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Or",
            version: 100,
            opcode: FuncOpCode::BOR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("left", VariableType::Integer),
                ArgumentDefinition::new("right", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Xor",
            version: 100,
            opcode: FuncOpCode::BXOR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("left", VariableType::Integer),
                ArgumentDefinition::new("right", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "Not",
            version: 100,
            opcode: FuncOpCode::BNOT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("expr", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "U_PwdHist",
            version: 100,
            opcode: FuncOpCode::U_PWDHIST,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("hist", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "U_PwdLc",
            version: 100,
            opcode: FuncOpCode::U_PWDLC,
            return_type: VariableType::Date,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_PwdTc",
            version: 100,
            opcode: FuncOpCode::U_PWDTC,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_Stat",
            version: 100,
            opcode: FuncOpCode::U_STAT,
            return_type: VariableType::None,
            args: Some(vec![
                ArgumentDefinition::new("option", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DefColor",
            version: 100,
            opcode: FuncOpCode::DEFCOLOR,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Abs",
            version: 100,
            opcode: FuncOpCode::ABS,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "GrafMode",
            version: 100,
            opcode: FuncOpCode::GRAFMODE,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "PSA",
            version: 100,
            opcode: FuncOpCode::PSA,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FileInf",
            version: 100,
            opcode: FuncOpCode::FILEINF,
            return_type: VariableType::None,
            args: Some(vec![
                ArgumentDefinition::new("file", VariableType::String),
                ArgumentDefinition::new("option", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "PPEName",
            version: 100,
            opcode: FuncOpCode::PPENAME,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MkDate",
            version: 100,
            opcode: FuncOpCode::MKDATE,
            return_type: VariableType::Date,
            args: Some(vec![
                ArgumentDefinition::new("year", VariableType::Integer),
                ArgumentDefinition::new("month", VariableType::Integer),
                ArgumentDefinition::new("day", VariableType::Integer),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "CurColor",
            version: 100,
            opcode: FuncOpCode::CURCOLOR,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "KInkey",
            version: 100,
            opcode: FuncOpCode::KINKEY,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MInkey",
            version: 100,
            opcode: FuncOpCode::MINKEY,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MaxNode",
            version: 100,
            opcode: FuncOpCode::MAXNODE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "SLPath",
            version: 100,
            opcode: FuncOpCode::SLPATH,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "HelpPath",
            version: 100,
            opcode: FuncOpCode::HELPPATH,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "TempPath",
            version: 100,
            opcode: FuncOpCode::TEMPPATH,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "Modem",
            version: 100,
            opcode: FuncOpCode::MODEM,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "LoggedOn",
            version: 100,
            opcode: FuncOpCode::LOGGEDON,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "CallNum",
            version: 100,
            opcode: FuncOpCode::CALLNUM,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MGetByte",
            version: 100,
            opcode: FuncOpCode::MGETBYTE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "TokCount",
            version: 100,
            opcode: FuncOpCode::TOKCOUNT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_RecNum",
            version: 100,
            opcode: FuncOpCode::U_RECNUM,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("user", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "U_InConf",
            version: 100,
            opcode: FuncOpCode::U_INCONF,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("record", VariableType::Integer),
                ArgumentDefinition::new("conf", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "PeekDW",
            version: 100,
            opcode: FuncOpCode::PEEKDW,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("var", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DbgLevel",
            version: 100,
            opcode: FuncOpCode::DBGLEVEL,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ScrText",
            version: 100,
            opcode: FuncOpCode::SCRTEXT,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("col", VariableType::Integer),
                ArgumentDefinition::new("row", VariableType::Integer),
                ArgumentDefinition::new("len", VariableType::Integer),
                ArgumentDefinition::new("code", VariableType::Boolean),
            ]),
            arg_descr: 0x04,
        },
        FunctionDefinition {
            name: "ShowStat",
            version: 100,
            opcode: FuncOpCode::SHOWSTAT,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "PageStat",
            version: 100,
            opcode: FuncOpCode::PAGESTAT,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ReplaceStr",
            version: 200,
            opcode: FuncOpCode::REPLACESTR,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("search", VariableType::String),
                ArgumentDefinition::new("replace", VariableType::String),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "StripStr",
            version: 200,
            opcode: FuncOpCode::STRIPSTR,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("search", VariableType::String),
            ]),

            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "ToBigStr",
            version: 200,
            opcode: FuncOpCode::TOBIGSTR,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToBoolean",
            version: 200,
            opcode: FuncOpCode::TOBOOLEAN,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToByte",
            version: 200,
            opcode: FuncOpCode::TOBYTE,
            return_type: VariableType::Byte,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToDate",
            version: 200,
            opcode: FuncOpCode::TODATE,
            return_type: VariableType::Date,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToDReal",
            version: 200,
            opcode: FuncOpCode::TODREAL,
            return_type: VariableType::Double,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToEDate",
            version: 200,
            opcode: FuncOpCode::TOEDATE,
            return_type: VariableType::EDate,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToInteger",
            version: 200,
            opcode: FuncOpCode::TOINTEGER,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToMoney",
            version: 200,
            opcode: FuncOpCode::TOMONEY,
            return_type: VariableType::Money,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToReal",
            version: 200,
            opcode: FuncOpCode::TOREAL,
            return_type: VariableType::Float,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToSByte",
            version: 200,
            opcode: FuncOpCode::TOSBYTE,
            return_type: VariableType::SByte,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToSWord",
            version: 200,
            opcode: FuncOpCode::TOSWORD,
            return_type: VariableType::SWord,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToTime",
            version: 200,
            opcode: FuncOpCode::TOTIME,
            return_type: VariableType::Time,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToUnsigned",
            version: 200,
            opcode: FuncOpCode::TOUNSIGNED,
            return_type: VariableType::Unsigned,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToWord",
            version: 200,
            opcode: FuncOpCode::TOWORD,
            return_type: VariableType::Word,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Mixed",
            version: 200,
            opcode: FuncOpCode::MIXED,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Alias",
            version: 200,
            opcode: FuncOpCode::ALIAS,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ConfReg",
            version: 200,
            opcode: FuncOpCode::CONFREG,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ConfExp",
            version: 200,
            opcode: FuncOpCode::CONFEXP,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("confNum", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ConfSel",
            version: 200,
            opcode: FuncOpCode::CONFSEL,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("confNum", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ConfSys",
            version: 200,
            opcode: FuncOpCode::CONFSYS,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("confNum", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ConfMW",
            version: 200,
            opcode: FuncOpCode::CONFMW,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("confNum", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "LPrinted",
            version: 200,
            opcode: FuncOpCode::LPRINTED,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "IsNonStop",
            version: 200,
            opcode: FuncOpCode::ISNONSTOP,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ErrCorrect",
            version: 200,
            opcode: FuncOpCode::ERRCORRECT,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ConfAlias",
            version: 200,
            opcode: FuncOpCode::CONFALIAS,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "UserAlias",
            version: 200,
            opcode: FuncOpCode::USERALIAS,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "CurUser",
            version: 200,
            opcode: FuncOpCode::CURUSER,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "U_LMR",
            version: 200,
            opcode: FuncOpCode::U_LMR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("confNum", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ChatStat",
            version: 200,
            opcode: FuncOpCode::CHATSTAT,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "DefAns",
            version: 200,
            opcode: FuncOpCode::DEFANS,
            return_type: VariableType::BigStr,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "LastAns",
            version: 200,
            opcode: FuncOpCode::LASTANS,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "MegaNum",
            version: 200,
            opcode: FuncOpCode::MEGANUM,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("number", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "EVTTimeAdj",
            version: 200,
            opcode: FuncOpCode::EVTTIMEADJ,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "IsBitSet",
            version: 200,
            opcode: FuncOpCode::ISBITSET,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("number", VariableType::None),
                ArgumentDefinition::new("bit", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "FmtReal",
            version: 200,
            opcode: FuncOpCode::FMTREAL,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("realExp", VariableType::Double),
                ArgumentDefinition::new("fieldWidth", VariableType::Integer),
                ArgumentDefinition::new("decimalPlaces", VariableType::Integer),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "FlagCNT",
            version: 200,
            opcode: FuncOpCode::FLAGCNT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "KBDBufSize",
            version: 200,
            opcode: FuncOpCode::KBDBUFSIZE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "PPLBufSize",
            version: 200,
            opcode: FuncOpCode::PPLBUFSIZE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "KBDFilUsued",
            version: 200,
            opcode: FuncOpCode::KBDFILUSED,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "LoMsgNum",
            version: 200,
            opcode: FuncOpCode::LOMSGNUM,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "HiMsgNum",
            version: 200,
            opcode: FuncOpCode::HIMSGNUM,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "DriveSpace",
            version: 200,
            opcode: FuncOpCode::DRIVESPACE,
            return_type: VariableType::Unsigned,
            args: Some(vec![
                ArgumentDefinition::new("drivespec", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "OutBytes",
            version: 200,
            opcode: FuncOpCode::OUTBYTES,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "HiConfNum",
            version: 200,
            opcode: FuncOpCode::HICONFNUM,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "InBytes",
            version: 200,
            opcode: FuncOpCode::INBYTES,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "CRC32",
            version: 200,
            opcode: FuncOpCode::CRC32,
            return_type: VariableType::Unsigned,
            args: Some(vec![
                ArgumentDefinition::new_flags("isFile", ArgumentDefinitionFlags::Crc32),
                ArgumentDefinition::new("str", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "PcbMac",
            version: 200,
            opcode: FuncOpCode::PCBMAC,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ActMSGNum",
            version: 200,
            opcode: FuncOpCode::ACTMSGNUM,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "StackLeft",
            version: 200,
            opcode: FuncOpCode::STACKLEFT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "StackErr",
            version: 200,
            opcode: FuncOpCode::STACKERR,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "DGetAlias",
            version: 300,
            opcode: FuncOpCode::DGETALIAS,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DBOF",
            version: 300,
            opcode: FuncOpCode::DBOF,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DChanged",
            version: 300,
            opcode: FuncOpCode::DCHANGED,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DDecimals",
            version: 300,
            opcode: FuncOpCode::DDECIMALS,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DDeleted",
            version: 300,
            opcode: FuncOpCode::DDELETED,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DEof",
            version: 300,
            opcode: FuncOpCode::DEOF,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DErr",
            version: 300,
            opcode: FuncOpCode::DERR,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DFields",
            version: 300,
            opcode: FuncOpCode::DFIELDS,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DLength",
            version: 300,
            opcode: FuncOpCode::DLENGTH,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DName",
            version: 300,
            opcode: FuncOpCode::DNAME,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("number", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DRecCount",
            version: 300,
            opcode: FuncOpCode::DRECCOUNT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DRecNo",
            version: 300,
            opcode: FuncOpCode::DRECNO,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DType",
            version: 300,
            opcode: FuncOpCode::DTYPE,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "FNext",
            version: 300,
            opcode: FuncOpCode::FNEXT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "DNext",
            version: 300,
            opcode: FuncOpCode::DNEXT,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ToDDate",
            version: 300,
            opcode: FuncOpCode::TODDATE,
            return_type: VariableType::DDate,
            args: Some(vec![
                ArgumentDefinition::new("exp", VariableType::None),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DCloseAll",
            version: 300,
            opcode: FuncOpCode::DCLOSEALL,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "DOpen",
            version: 300,
            opcode: FuncOpCode::DOPEN,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
                ArgumentDefinition::new("exclusive", VariableType::Boolean),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "DClose",
            version: 300,
            opcode: FuncOpCode::DCLOSE,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DSetAlias",
            version: 300,
            opcode: FuncOpCode::DSETALIAS,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DPack",
            version: 300,
            opcode: FuncOpCode::DPACK,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DLockF",
            version: 300,
            opcode: FuncOpCode::DLOCKF,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DLock",
            version: 300,
            opcode: FuncOpCode::DLOCK,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DLockR",
            version: 300,
            opcode: FuncOpCode::DLOCKR,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("recNo", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DUnLock",
            version: 300,
            opcode: FuncOpCode::DUNLOCK,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DNOpen",
            version: 300,
            opcode: FuncOpCode::DNOPEN,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DNClose",
            version: 300,
            opcode: FuncOpCode::DNCLOSE,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DNCloseAll",
            version: 300,
            opcode: FuncOpCode::DNCLOSEALL,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DNew",
            version: 300,
            opcode: FuncOpCode::DNEW,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DAdd",
            version: 300,
            opcode: FuncOpCode::DADD,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DAppend",
            version: 300,
            opcode: FuncOpCode::DAPPEND,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DTop",
            version: 300,
            opcode: FuncOpCode::DTOP,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DGo",
            version: 300,
            opcode: FuncOpCode::DGO,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("recNo", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DBottom",
            version: 300,
            opcode: FuncOpCode::DBOTTOM,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DSkip",
            version: 300,
            opcode: FuncOpCode::DSKIP,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("number", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DBLank",
            version: 300,
            opcode: FuncOpCode::DBLANK,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DDelete",
            version: 300,
            opcode: FuncOpCode::DDELETE,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DRecall",
            version: 300,
            opcode: FuncOpCode::DRECALL,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DTag",
            version: 300,
            opcode: FuncOpCode::DTAG,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DSeek",
            version: 300,
            opcode: FuncOpCode::DSEEK,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("expression", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DFBlank",
            version: 300,
            opcode: FuncOpCode::DFBLANK,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DGet",
            version: 300,
            opcode: FuncOpCode::DGET,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "DPut",
            version: 300,
            opcode: FuncOpCode::DPUT,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
                ArgumentDefinition::new("name", VariableType::String),
                ArgumentDefinition::new("expr", VariableType::String),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "DFCopy",
            version: 300,
            opcode: FuncOpCode::DFCOPY,
            return_type: VariableType::Boolean,
            args: Some(vec![
                ArgumentDefinition::new("srcchannel", VariableType::Integer),
                ArgumentDefinition::new("srcname", VariableType::String),
                ArgumentDefinition::new("dstchannel", VariableType::Integer),
                ArgumentDefinition::new("dstname", VariableType::String),
            ]),
            arg_descr: 0x04,
        },
        FunctionDefinition {
            name: "DSelect",
            version: 300,
            opcode: FuncOpCode::DSELECT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("alias", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DChkStat",
            version: 300,
            opcode: FuncOpCode::DCHKSTAT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("channel", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "PCBAccount",
            version: 300,
            opcode: FuncOpCode::PCBACCOUNT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("field", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "PCBAccStat",
            version: 300,
            opcode: FuncOpCode::PCBACCSTAT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("field", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "DErrMsg",
            version: 300,
            opcode: FuncOpCode::DERRMSG,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("errcode", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "Account",
            version: 300,
            opcode: FuncOpCode::ACCOUNT,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("field", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ScanMsgHdr",
            version: 300,
            opcode: FuncOpCode::SCANMSGHDR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("conf", VariableType::Integer),
                ArgumentDefinition::new("startMsg", VariableType::Integer),
                ArgumentDefinition::new("field", VariableType::Integer),
                ArgumentDefinition::new("test", VariableType::String),
            ]),
            arg_descr: 0x04,
        },
        FunctionDefinition {
            name: "CheckRIP",
            version: 300,
            opcode: FuncOpCode::CHECKRIP,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "RIPVer",
            version: 300,
            opcode: FuncOpCode::RIPVER,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "QWKLimits",
            version: 300,
            opcode: FuncOpCode::QWKLIMITS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FindFirst",
            version: 300,
            opcode: FuncOpCode::FINDFIRST,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("file", VariableType::String),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FindNext",
            version: 300,
            opcode: FuncOpCode::FINDNEXT,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "UseLMRs",
            version: 300,
            opcode: FuncOpCode::USELMRS,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ConfInfo",
            version: 300,
            opcode: FuncOpCode::CONFINFO,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("conf", VariableType::Integer),
                ArgumentDefinition::new("field", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "TInkey",
            version: 300,
            opcode: FuncOpCode::TINKEY,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("ticks", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "CWD",
            version: 300,
            opcode: FuncOpCode::CWD,
            return_type: VariableType::String,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "InStrr",
            version: 300,
            opcode: FuncOpCode::INSTRR,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("str", VariableType::BigStr),
                ArgumentDefinition::new("pattern", VariableType::String),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "FDORDAKA",
            version: 300,
            opcode: FuncOpCode::FDORDAKA,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FDORDOrg",
            version: 300,
            opcode: FuncOpCode::FDORDORG,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FDORDArea",
            version: 300,
            opcode: FuncOpCode::FDORDAREA,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FDOQRd",
            version: 300,
            opcode: FuncOpCode::FDOQRD,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x06,
        },
        FunctionDefinition {
            name: "GetDrive",
            version: 300,
            opcode: FuncOpCode::GETDRIVE,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "SetDrive",
            version: 300,
            opcode: FuncOpCode::SETDRIVE,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("drive", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "BS2I",
            version: 300,
            opcode: FuncOpCode::BS2I,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("r", VariableType::BigStr),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "BD2I",
            version: 300,
            opcode: FuncOpCode::BD2I,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("r", VariableType::Double),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "I2BS",
            version: 300,
            opcode: FuncOpCode::I2BS,
            return_type: VariableType::BigStr,
            args: Some(vec![
                ArgumentDefinition::new("r", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "I2BD",
            version: 300,
            opcode: FuncOpCode::I2BD,
            return_type: VariableType::Double,
            args: Some(vec![
                ArgumentDefinition::new("r", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "FTell",
            version: 300,
            opcode: FuncOpCode::FTELL,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("chan", VariableType::Integer),
            ]),
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "OS",
            version: 300,
            opcode: FuncOpCode::OS,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "ShortDesc",
            version: 340,
            opcode: FuncOpCode::SHORT_DESC,
            return_type: VariableType::Boolean,
            args: None,
            arg_descr: 0x00,
        },
        FunctionDefinition {
            name: "GetBankBal",
            version: 340,
            opcode: FuncOpCode::GetBankBal,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("field", VariableType::Integer),
            ]),
            arg_descr: 0x02,
        },
        FunctionDefinition {
            name: "GetMsgHdr",
            version: 340,
            opcode: FuncOpCode::GetMsgHdr,
            return_type: VariableType::String,
            args: Some(vec![
                ArgumentDefinition::new("conf", VariableType::Integer),
                ArgumentDefinition::new("msgNum", VariableType::Integer),
                ArgumentDefinition::new("field", VariableType::Integer),
            ]),
            arg_descr: 0x03,
        },
        FunctionDefinition {
            name: "SetMsgHdr",
            version: 340,
            opcode: FuncOpCode::SetMsgHdr,
            return_type: VariableType::Integer,
            args: Some(vec![
                ArgumentDefinition::new("conf", VariableType::Integer),
                ArgumentDefinition::new("msgNum", VariableType::Integer),
                ArgumentDefinition::new("field", VariableType::Integer),
                ArgumentDefinition::new("value", VariableType::String),
            ]),
            arg_descr: 0x04,
        },
        // New Functions
        FunctionDefinition {
            // SPECIAL CASE!
            name: "MemberReference",
            version: 400,
            opcode: FuncOpCode::MemberReference,
            return_type: VariableType::None,
            args: None,
            arg_descr: -1,
        },
        FunctionDefinition {
            // SPECIAL CASE!
            name: "MemberCall",
            version: 400,
            opcode: FuncOpCode::MemberCall,
            return_type: VariableType::None,
            args: None,
            arg_descr: -1,
        },
        FunctionDefinition {
            name: "ConfInfo",
            version: 400,
            opcode: FuncOpCode::NewConfInfo,
            return_type: VariableType::UserData(30),
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "AreaId",
            version: 400,
            opcode: FuncOpCode::AreaId,
            return_type: VariableType::MessageAreaID,
            args: Some(vec![
                ArgumentDefinition::new("conf", VariableType::Integer),
                ArgumentDefinition::new("area", VariableType::Integer)
            ]),
            arg_descr: 0x02,
        },

        // ALIASES (need to be last in the list)
        FunctionDefinition {
            name: "ToString",
            version: 100,
            opcode: FuncOpCode::TOSTRING,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToInt",
            version: 100,
            opcode: FuncOpCode::TOSWORD, // Note: This is correct it's not TOINTEGER for some reason.
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
        FunctionDefinition {
            name: "ToDWord",
            version: 100,
            opcode: FuncOpCode::TOUNSIGNED,
            return_type: VariableType::Integer,
            args: None,
            arg_descr: 0x01,
        },
    ];
}
